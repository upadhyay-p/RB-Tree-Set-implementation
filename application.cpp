#include<iostream>#include <string.h>#include "Set.cpp"#include<limits.h>#include<vector>#include<time.h>using namespace std;vector <pair<int,int>> v[1000000];  int dist[1000000];int vis[1000000];int nodes,edges;void shortest_path(){memset(vis,0, sizeof vis);dist[1]=0;Set<pair<int, int>> s;  //pair x,y where x is the weight and y is the destinations.insert({0,1});int i=0;while(!s.empty()){	pair <int,int> p =s.begin();	s.erase(s.begin());	int x = p.second;	int wei = p.first;	if(vis[x]==1) continue;	vis[x]=1;	for(int i=0;i<v[x].size();i++){		int e=v[x][i].first;		int w=v[x][i].second;		if(vis[e]==0){		if(dist[x]+w<dist[e]){			dist[e]=dist[x]+w;			s.insert(make_pair(dist[e],e));		}}	}}}void intialize(){	for(int i=1;i<=nodes;i++){		dist[i]=INT_MAX;	}}int main(){	cin>>nodes>>edges;for(int i=1;i<=edges;i++){	int x,y,z;	cin>>x>>y>>z;	v[x].push_back({y,z});}intialize();shortest_path();for(int i=2;i<=nodes;i++){	cout<<dist[i]<<" ";}		return 0;}